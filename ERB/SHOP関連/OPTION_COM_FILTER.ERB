;FILTER用のCOMNAME取得関数
;とりあえず0～599の範囲で使って下さい
@GET_COMNAME(ID_COM)
#FUNCTIONS
#DIM ID_COM
;派生コマンド用
SIF INRANGE(ID_COM, 500, 599)
	RETURNF STR:(1000 + ID_COM)
SIF INRANGE(ID_COM, 0, 499)
	RETURNF TRAINNAME:ID_COM
THROW 不正なCOM番号が渡されました {ID_COM}



@QUICKFILTER(ID_COM)
#FUNCTION
#DIM ID_COM
#DIM CONST BIT_Ｖ系       = 1
#DIM CONST BIT_Ａ系       = 2
#DIM CONST BIT_奉仕系     = 5
#DIM CONST BIT_SM系       = 6
#DIM CONST BIT_セクハラ系 = 7
#DIM CONST BIT_家事系     = 9
#DIM CONST BIT_自慰系     = 13  ;たぶんつかってない
SIF IS_COM_VAGINA(ID_COM)   && !CFLAG:TARGET:Ｖアンフィルタ
	RETURNF 0
SIF IS_COM_ANAL(ID_COM)     && !CFLAG:TARGET:Ａアンフィルタ
	RETURNF 0
SIF IS_COM_HOUSI(ID_COM)    && !CFLAG:TARGET:奉仕アンフィルタ
	RETURNF 0
SIF IS_COM_SM(ID_COM)       && !CFLAG:TARGET:ＳＭアンフィルタ
	RETURNF 0
SIF IS_COM_KAJI(ID_COM)     && !FLAG:家事アンフィルタ
	RETURNF 0
SIF IS_COM_SEKUHARA(ID_COM) && !CFLAG:TARGET:セクハラアンフィルタ && (!FLAG:70 || CFLAG:TARGET:344 == 1)
	RETURNF 0
;SIF IS_COM_ONANISM(ID_COM)  && !CFLAG:TARGET:自慰アンフィルタ
;	RETURNF 0
RETURNF 1



@フィルタ表示
;Act_COMのラインと合体
SELECTCASE CFLAG:オート喘ぎ
	CASE 0
		LOCALS = オート喘ぎ：なし
	CASE 1
		LOCALS = オート喘ぎ：する
	CASE 2
		LOCALS = オート喘ぎ：下品喘ぎあり
ENDSELECT
PRINTFORM %"=" * 6% Act_COM ==
SIF STALKED == TARGET && STALKED
	SETCOLOR C_YELLOW
PRINTBUTTON "【★】", TARGET + 4000
RESETCOLOR
CALL PRINTBUTTON_EX("[Ｖ]",831,!CFLAG:TARGET:Ｖアンフィルタ)
PRINTPLAIN =
CALL PRINTBUTTON_EX("[Ａ]",832,!CFLAG:TARGET:Ａアンフィルタ)
PRINTPLAIN =
CALL PRINTBUTTON_EX("[ＳＭ]",836,!CFLAG:TARGET:ＳＭアンフィルタ)
PRINTPLAIN =
CALL PRINTBUTTON_EX("[奉仕]",835,!CFLAG:TARGET:奉仕アンフィルタ)
PRINTPLAIN =
;CALL PRINTBUTTON_EX("[自慰]",843,!CFLAG:TARGET:自慰アンフィルタ)
;PRINTPLAIN =
CALL PRINTBUTTON_EX("[セクハラ]",837,!CFLAG:TARGET:セクハラアンフィルタ)
PRINTPLAIN =
CALL PRINTBUTTON_EX("[家事]",839,!FLAG:家事アンフィルタ)
PRINTPLAIN =
CALL PRINTBUTTON_EX("[自動ゴム装着]",838,!CFLAG:自動ゴム)
PRINTPLAIN =
IF TARGET != MASTER
	CALL PRINTBUTTON_EX(@"[%LOCALS%]",4000,!CFLAG:オート喘ぎ)
	PRINTFORM %"=" * (41 - STRLENS(LOCALS))%
ELSE
	PRINTFORM %"=" * 43%
ENDIF
PRINTL 

;文字列変数に保存してみた
@OPTION_COMMAND_FILTER
#LOCALSIZE 600
#DIM ID_COM
CALL LOAD_COM_FILTER(LOCAL)
DRAWLINE
FOR ID_COM ,0, 600
	SIF !STRLENS(GET_COMNAME(ID_COM))
		CONTINUE
	CALL PRINTBUTTON_EXC(@"%GET_COMNAME(ID_COM)%[{ID_COM,3}]", ID_COM, STRCOUNT(SAVESTR:0, @"/{ID_COM}/"))
NEXT
PRINTL 
DRAWLINE
PRINTFORML [1101] - Ｖフィルタ     [1102] - Ａフィルタ       [1103] - 奉仕フィルタ 
PRINTFORML [1104] - ＳＭフィルタ   [1105] - セクハラフィルタ [1106] - 家事フィルタ 
PRINTFORML [1111] - ＡＬＬフィルタ
PRINTFORML [2000] - USERCOMフィルタ
PRINTFORML [3000] - フィルタの保存 [3001] - フィルタの読込
PRINTFORML [1000] - 決定
PRINTL  
PRINTFORML [9999] - リセット
PRINTL  
INPUT
SELECTCASE RESULT
CASE 1000
	RETURN 0
CASE 9999
	SAVESTR:0 = 
CASE 3000
	CALL SAVE_GLOBAL_COM_FILTER
CASE 3001
	CALL LOAD_GLOBAL_COM_FILTER
CASE 2000
	CALL SETUP_USERCOM_FILTER
CASE 1101
	CALL SET_FILTER_NG_VAGINA
CASE 1102
	CALL SET_FILTER_NG_ANAL
CASE 1103
	CALL SET_FILTER_NG_HOUSI
CASE 1104
	CALL SET_FILTER_NG_SM
CASE 1105
	CALL SET_FILTER_NG_SEKUHARA
CASE 1106
	CALL SET_FILTER_NG_KAJI
CASE 1111
	CALL SET_FILTER_NG_ALL
CASEELSE
	IF STRLENS(GET_COMNAME(RESULT))
		LOCAL:RESULT = !LOCAL:RESULT
		IF LOCAL:RESULT
			CALL ADD_COM_FILTER(RESULT)
		ELSE
			CALL DEL_COM_FILTER(RESULT)
			;SAVE_COM_FILTER(LOCAL)
		ENDIF
	ENDIF
ENDSELECT
RESTART



;フィルターにNGなCOM追加する関数
@ADD_COM_FILTER(NG_ID)
#DIM NG_ID
SIF SAVESTR:0 == ""
	SAVESTR:0 = /
SIF STRCOUNT(SAVESTR:0, @"/{NG_ID}/")
	RETURN
SAVESTR:0 += @"{NG_ID}/"

;フィルターからNGなCOM削除する関数
;正規表現とかろくに触ったことないんだがこれで動くん？
@DEL_COM_FILTER(NG_ID)
#DIM NG_ID
SIF !STRCOUNT(SAVESTR:0, @"/{NG_ID}/")
	RETURN
SAVESTR:0 '= REPLACE(SAVESTR:0, @"%ESCAPE("/")%{NG_ID}%ESCAPE("/")%", ESCAPE("/"))



;REF使用COM_FILTER保存関数
;配列→文字列
;配列の要素数が600未満だと怒られる
@SAVE_COM_FILTER(NG_LIST)
#DIM REF NG_LIST
#DIM ID_COM
SAVESTR:0 = /
FOR ID_COM, 0, 600
	SIF !NG_LIST:ID_COM
		CONTINUE
	SIF STRCOUNT(SAVESTR:0, @"/{ID_COM}/")
		CONTINUE
	SAVESTR:0 += @"{ID_COM}/"
NEXT
;#;PRINTFORML SAVE_COM_FILTER：%SAVESTR:0%


;REF使用COM_FILTER読込関数
;文字列→配列
;配列の要素数が600未満だと怒られる
@LOAD_COM_FILTER(NG_LIST)
#DIM REF NG_LIST
#DIM ID_COM
VARSET NG_LIST
IF SAVESTR:0 == ""
	SAVESTR:0 = /
ELSE
	FOR ID_COM, 0, 600
		SIF STRCOUNT(SAVESTR:0, @"/{ID_COM}/")
			NG_LIST:ID_COM = 1
	NEXT
ENDIF
;#;PRINTFORML LOAD_COM_FILTER：%SAVESTR:0%


;NG文字列をGLOBALに保存
@SAVE_GLOBAL_COM_FILTER
LOADGLOBAL
FOR LOCAL, 0, 3
	PRINTFORM [{LOCAL}] - 
	IF STRLENS(GLOBALS:(LOCAL * 2 + 1))
		PRINTFORML [%GLOBALS:(LOCAL * 2 + 1)%]
	ELSE
		PRINTL ----------
	ENDIF
NEXT
PRINTL [100] - 戻る
INPUT
DO
	LOCAL = RESULT
	SIF RESULT == 100
		RETURN
	SIF !INRANGE(RESULT, 0, 2)
		CONTINUE
	SIF STRLENS(GLOBALS:(RESULT * 2 + 1))
		PRINTFORML 【%GLOBALS:(RESULT * 2 + 1)%】 このデータに上書きします
	PRINTL コマンドフィルタの名前を登録してください
	INPUTS
	GLOBALS:(LOCAL * 2 + 1) = %RESULTS%
	GLOBALS:(LOCAL * 2) = %SAVESTR:0%
	PRINTFORMW コマンドフィルタ【%GLOBALS:(LOCAL * 2 + 1)%】を登録しました
	SAVEGLOBAL
	RETURN
LOOP 1



;NG文字列をGLOBALから読込
@LOAD_GLOBAL_COM_FILTER
LOADGLOBAL
FOR LOCAL, 0, 3
	PRINTFORM [{LOCAL}] - 
	IF STRLENS(GLOBALS:(LOCAL * 2 + 1))
		PRINTFORML [%GLOBALS:(LOCAL * 2 + 1)%]
	ELSE
		PRINTL ----------
	ENDIF
NEXT
PRINTL [100] - 戻る
INPUT
DO
	SIF RESULT == 100 
		RETURN
	SIF !INRANGE(RESULT, 0, 2)
		CONTINUE
	PRINTFORMW コマンドフィルタ【%GLOBALS:(RESULT * 2 + 1)%】を読み込みました
	SAVESTR:0 = %GLOBALS:(RESULT * 2)%
	RETURN
LOOP 1



;ぶっちゃけ使わない気がする
@SETUP_USERCOM_FILTER
CALL PRINTBUTTON_EXC("履歴表示[800]",             800, GETBIT(FLAG:USERCOMフィルタ, 12))
CALL PRINTBUTTON_EXC("汚れ表示[801]",             801, GETBIT(FLAG:USERCOMフィルタ,  0))
CALL PRINTBUTTON_EXC("相手を変える[802]",         802, GETBIT(FLAG:USERCOMフィルタ,  1))
CALL PRINTBUTTON_EXC("能力表示[803]",             803, GETBIT(FLAG:USERCOMフィルタ,  2))
CALL PRINTBUTTON_EXC("能力表示（マスター）[804]", 804, GETBIT(FLAG:USERCOMフィルタ,  3))
CALL PRINTBUTTON_EXC("アイテム確認[805]", 805, GETBIT(FLAG:USERCOMフィルタ,  4))
CALL PRINTBUTTON_EXC("自動時止め移動[995]", 995, GETBIT(FLAG:USERCOMフィルタ,  13))

;自動掃除
CALL PRINTBUTTON_EXC("自動掃除[996]", 996, GETBIT(FLAG:USERCOMフィルタ,  14))

CALL PRINTBUTTON_EXC("コマンドフィルタ[809]",     809, GETBIT(FLAG:USERCOMフィルタ, 11))
PRINTL 
PRINTC 戻る [0]
INPUT
SELECTCASE RESULT
CASE 0
	RETURN
CASE 801
	INVERTBIT FLAG:USERCOMフィルタ, 0
CASE 802
	INVERTBIT FLAG:USERCOMフィルタ, 1
CASE 803
	INVERTBIT FLAG:USERCOMフィルタ, 2
CASE 804
	INVERTBIT FLAG:USERCOMフィルタ, 3
CASE 805
	INVERTBIT FLAG:USERCOMフィルタ, 4
CASE 809
	INVERTBIT FLAG:USERCOMフィルタ, 11
	IF GETBIT (FLAG:USERCOMフィルタ, 11)
		PRINTW 決定すると手打ちで[809]を入力するかOPTIONからでないと戻せなくなります
		CLEARLINE 1
	ENDIF
CASE 800
	INVERTBIT FLAG:USERCOMフィルタ, 12
CASE 995
	INVERTBIT FLAG:USERCOMフィルタ, 13
;自動掃除
CASE 996
	INVERTBIT FLAG:USERCOMフィルタ, 14
ENDSELECT
CLEARLINE 3
RESTART


;V使用コマンド判定
;FLAG:1013, 1
@IS_COM_VAGINA(ID_COM)
#FUNCTION
#DIM ID_COM
SIF GROUPMATCH(ID_COM, 3, 44, 60, 61, 65, 67, 68, 71, 122, 141, 143, 185, 316, 369, 503, 504, 506, 507, 513)
	RETURNF 1
RETURNF 0

@SET_FILTER_NG_VAGINA
#DIM ID_COM
FOR ID_COM, 0, 600
	;V
	SIF !IS_COM_VAGINA(ID_COM)
		CONTINUE
	CALL ADD_COM_FILTER(ID_COM)
NEXT


;A使用コマンド判定
;FLAG:1013, 2
@IS_COM_ANAL(ID_COM)
#FUNCTION
#DIM ID_COM
SIF GROUPMATCH(ID_COM, 4, 5, 45, 62, 63, 66, 69, 70, 314, 142, 143, 146, 147, 148, 314, 369, 514, 515)
	RETURNF 1
RETURNF 0

@SET_FILTER_NG_ANAL
#DIM ID_COM
FOR ID_COM, 0, 600
	;A
	SIF !IS_COM_ANAL(ID_COM)
		CONTINUE
	CALL ADD_COM_FILTER(ID_COM)
NEXT




;奉仕コマンド判定
;FLAG:1013, 5
@IS_COM_HOUSI(ID_COM)
#FUNCTION
#DIM ID_COM
SIF INRANGE(ID_COM, 80, 85) || GROUPMATCH(ID_COM, 120, 121, 140, 501, 505, 508, 509, 510, 511, 512)
	RETURNF 1
RETURNF 0

@SET_FILTER_NG_HOUSI
#DIM ID_COM
FOR ID_COM, 0, 600
	;HOUSI
	SIF !IS_COM_HOUSI(ID_COM)
		CONTINUE
	CALL ADD_COM_FILTER(ID_COM)
NEXT



;SMコマンド判定
;FLAG:1013, 6
@IS_COM_SM(ID_COM)
#FUNCTION
#DIM ID_COM
SIF INRANGE(ID_COM, 100, 119) || INRANGE(ID_COM, 140, 159)
	RETURNF 1
RETURNF 0

@SET_FILTER_NG_SM
#DIM ID_COM
FOR ID_COM, 0, 600
	;SM
	SIF !IS_COM_SM(ID_COM)
		CONTINUE
	CALL ADD_COM_FILTER(ID_COM)
NEXT



;セクハラコマンド判定
;FLAG:1013, 7
@IS_COM_SEKUHARA(ID_COM)
#FUNCTION
#DIM ID_COM
SIF INRANGE(ID_COM, 305, 316) || INRANGE(ID_COM, 560, 563) || GROUPMATCH(ID_COM, 330, 350, 352, 429)
	RETURNF 1
RETURNF 0

@SET_FILTER_NG_SEKUHARA
#DIM ID_COM
FOR ID_COM, 0, 600
	;セクハラ
	SIF !IS_COM_SEKUHARA(ID_COM)
		CONTINUE
	CALL ADD_COM_FILTER(ID_COM)
NEXT



;家事コマンド判定
;FLAG:1013, 9
@IS_COM_KAJI(ID_COM)
#FUNCTION
#DIM ID_COM
SIF INRANGE(ID_COM, 410, 419) || GROUPMATCH(ID_COM, 403, 450)
	RETURNF 1
RETURNF 0

@SET_FILTER_NG_KAJI
#DIM ID_COM
FOR ID_COM, 0, 600
	SIF !IS_COM_KAJI(ID_COM)
		CONTINUE
	CALL ADD_COM_FILTER(ID_COM)
NEXT



;自慰コマンド判定
;FLAG:1013, 13
@IS_COM_ONANISM(ID_COM)
#FUNCTION
#DIM ID_COM
SIF INRANGE(ID_COM, 700, 712) || INRANGE(ID_COM, 740, 752) || GROUPMATCH(ID_COM, 433)
	RETURNF 1
RETURNF 0

@SET_FILTER_NG_ONANISM
#DIM ID_COM
FOR ID_COM, 0, 600
	SIF !IS_COM_ONANISM(ID_COM)
		CONTINUE
	CALL ADD_COM_FILTER(ID_COM)
NEXT



;ＡＬＬコマンド判定
@SET_FILTER_NG_ALL
#DIM ID_COM
FOR ID_COM, 0, 600
	CALL ADD_COM_FILTER(ID_COM)
NEXT
