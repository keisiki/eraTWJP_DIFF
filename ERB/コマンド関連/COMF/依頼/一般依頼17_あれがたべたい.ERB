;存否関数
;F関数はTRYCALL系が使えないので通常関数で存否配列を作っちゃう
@EXIST_一般依頼17
#LOCALSIZE 1
#LOCALSSIZE 1

;オブジェクト本体
;ここでARGで渡されるのはCLIENT_IDです
@一般依頼17(ARG, O_DATA, V_NAME)
#FUNCTION
#LOCALSIZE 1
#LOCALSSIZE 1
#DIMS O_DATA
#DIMS V_NAME
SELECTCASE O_DATA
CASE "依頼名"
	;「名前忘れたけどこんな感じの料理あったよね」とは別に「こんな料理があったら食べてみたいね」みたいな形式もアリなのかな
	;やっぱり同じ依頼の名前が複数あるの好ましくないかな？
	;IF RAND:2
		CALLF MAKE_STR(V_NAME, "あれが食べたい！……なんて名前だっけ")
	;ELSE
	;	CALLF MAKE_STR(V_NAME, "こんな料理あったらいいね")
	;ENDIF
CASE "依頼内容表示"
	CALLF MAKE_STR(V_NAME, @"あいまいな記憶を頼りに料理を作って届ける")
CASE "依頼報酬表示"
	CALLF MAKE_STR(V_NAME, @"\\2500＋おまけ")
CASE "依頼実行コマンド名"
	;何か問題があったら変えてください
	CALLF MAKE_STR(V_NAME, "出前漢です")
CASE "依頼内容"
	CALLF MAKE_INT(V_NAME, MAKE_IRAI_DATA(0, "その他"))
CASE "依頼サブ"
	;これは乱数シード
	CALLF MAKE_INT(V_NAME, RAND:1000000)
CASE "依頼期限"
;発生時ではなく受託時に確定します
	CALLF MAKE_INT(V_NAME, 3)
CASE "依頼発生率"
	CALLF MAKE_INT(V_NAME, 5)
CASE "依頼発生条件"
	CALLF MAKE_INT(V_NAME, 1)
CASE "依頼受託可能条件"
	CALLF MAKE_INT(V_NAME, 1)
CASE "依頼実行可能条件"
	SIF DISH_NAME != "" && TARGET == ARG
		CALLF MAKE_INT(V_NAME, 1)
;成功/失敗処理はCARRYOUTで直接書く
;SOURCEやITEM入手、消費が煩雑になるので
CASE "依頼消滅条件"
	SIF RAND:100 < 30
		CALLF MAKE_INT(V_NAME, 1)
CASE "依頼人連れ出し可能"
ENDSELECT


@IRAI_一般17(CHARA, IRAI_ID, SCENE)
#DIM  CHARA
#DIM  IRAI_ID
#DIMS SCENE
#DIM  CLIENT_ID
#DIM 評価基礎 ;料理自体の評価
#DIM タグ評価 ;依頼者の出した料理の特徴とどれだけ一致したか評価
#DIMS 味要求  ;依頼者の要求した味を置いておく変数
#DIM おまけ   ;大成功時のボーナス。成功/大成功判定が出てから報酬受け取りまでに他の依頼関数の実行が挟まるケースないよね？
#DIM CONST 評価基準 = 50 , 75 ;評価基準:0未満のスコアなら失敗、評価基準:0以上なら成功、評価基準:1以上なら大成功
#DIM CONST タグ一致加点 = 10  ;タグ一致ひとつあたり貰える点数
#DIM CONST 基礎補正 = 50      ;料理自体の評価にかかる補正値。百分率。タグ一致による加点があるので料理自体の評価は低く補正する
#DIM  CHK_SLOT
#DIM SAVECLR  ;色保存用

CLIENT_ID = IRAI_ID_TO_CLIENT(IRAI_ID)
CHK_SLOT  = SEARCH_IRAI_SLOT(IRAI_ID)

;任意の文字列を保存しておく方法が分からなかったので力業
DUMPRAND
RANDOMIZE IRAI_SUB:CHK_SLOT
味要求 = %IRAI_一般17_味設定(CHARA)%
INITRAND

SELECTCASE SCENE
CASE "依頼条件表示"
	;何か専用の表示情報を設けたい時用
	;受託済みの依頼表示で使用されます
	;
	;PRINT系だけでSOURCEとかは入れちゃダメ、WAITも無しで
	;ここ以外の表示項目は
	;PRINTFORML 　　　　　：
	;となっているのでスペースを揃えたほうが見栄えが良いです
	PRINTFORML 要求する味：%味要求%
CASE "依頼実行時"
	;このCASEに限り、RESULTが意味を持ちます
	;依頼実行時のRESULTにはIRAI_CONST_RESULT()を使用してください
	;可能な引数は"キャンセル", "実行して成功", "実行して失敗", "実行して未解決"です
	;独自処理を仕込みたい時は"実行して未解決"で先延ばしするなりしてください
	VARSET おまけ
	PRINTFORML 「ご注文の%DISH_NAME%になりまーす」
	PRINTFORMW %CALLNAME:MASTER%は%CALLNAME:CHARA%に<%DISH_NAME%>を届けた
	CALL REVIEW_DISH(CHARA , DISH_TASTE)
	DISH_NAME = 

	;#;PRINTFORML 要求するもの＝%味要求%
	;#;PRINTFORML 料理の味　　＝%DISH_TASTE%

	;料理が美味しいかどうか、要求した物に近いかどうかの両方を吟味
	;料理自体の味は評価点を低く補正
	評価基礎 = TCVAR:CHARA:料理評価値 * 基礎補正 / 100 / 10
	タグ評価 = IRAI_一般17_ジャンル評価(DISH_TASTE , 味要求) * タグ一致加点

	;きれいに★を並べるために雑に補正
	;#;PRINTFORML 補正前評価基礎：{評価基礎}    タグ評価：{タグ評価}
	IF 評価基礎 % 10 < 5
		タグ評価 += 評価基礎 % 10
		評価基礎 -= 評価基礎 % 10
	ELSE
		タグ評価 -= 10 - 評価基礎 % 10
		評価基礎 += 10 - 評価基礎 % 10
	ENDIF
	;#;PRINTFORML 補正後評価基礎：{評価基礎}    タグ評価：{タグ評価}

	SAVECLR = GETCOLOR()
	PRINTL 
	SETCOLORBYNAME YELLOW
	PRINTFORM %"★" * (評価基礎 / 10)%
	SETCOLORBYNAME RED
	PRINTFORM %"★" * (タグ評価 / 10)%
	PRINTL 
	SETCOLOR SAVECLR

	SELECTCASE 評価基礎 + タグ評価
		CASE IS < 評価基準:0
			;失敗
			PRINT <--
			SETCOLORBYNAME RED
			PRINT BAD
			SETCOLOR SAVECLR
			PRINTL -->
			IF 評価基礎 < (評価基礎 + タグ評価) / 2
				;出来が悪い
				PRINTFORML %CALLNAME:CHARA%はものすごく渋い顔をしている
			ELSE
				;思ってたのと違う
				PRINTFORML %CALLNAME:CHARA%は想像とかけ離れた料理を前に、困惑している
			ENDIF
			PRINTFORMW 要求に応えられなかった……
			PRINTL 
			RETURN IRAI_CONST_RESULT("実行して失敗")
		CASE IS < 評価基準:1
			;成功
			PRINT <--
			SETCOLORBYNAME PINK
			PRINT GOOD!
			SETCOLOR SAVECLR
			PRINTL -->
			PRINTFORMW %CALLNAME:CHARA%はまあまあ納得してくれたようだ
			PRINTL 
			SOURCE:CHARA:歓楽 += 500
			RETURN IRAI_CONST_RESULT("実行して成功")
		CASEELSE
			;大成功
			PRINT <--
			SETCOLORBYNAME GOLD
			PRINT EXCELLENT!!
			SETCOLOR SAVECLR
			PRINTL -->
			PRINTFORMW %CALLNAME:CHARA%は注文通りの料理が届いて満足している！
			PRINTL 
			SOURCE:CHARA:歓楽 += 2000
			おまけ = 1
			RETURN IRAI_CONST_RESULT("実行して成功")
	ENDSELECT
CASE "依頼成功時"
;成功報告時の報酬など
	CALL CHANGE_CFLAG(2, CHARA, 25)
	CALL CHANGE_CFLAG(4, CHARA, 25)
	CALL GET_MONEY_YEN(2500, 2)
	IF おまけ
		PRINTFORML %CALLNAME:CHARA%はさらにボーナスをくれた！
		CALL CHANGE_CFLAG(2, CHARA, 15)
		CALL CHANGE_CFLAG(4, CHARA, 15)
		CALL GET_MONEY_YEN(1000, 2)
	ENDIF
CASE "依頼失敗時"
;失敗報告時の処理
	CALL CHANGE_CFLAG(2, CHARA, -5)
	CALL CHANGE_CFLAG(4, CHARA, -5)
ENDSELECT


;MINTAG、MAXTAGは中盤のTASTETAG_ORIからの抽選にのみ影響する
;TASTEタグ自体の抽選数はMAXTAGより多めになる傾向
@IRAI_一般17_味設定(CHR = -1 , MINTAG = 5 , MAXTAG = 9)
#FUNCTIONS
#DIM CNT
#DIM MAXCNT
#DIM MINTAG  ;選ばれうる味タグの最低数
#DIM MAXTAG  ;選ばれうる味タグの最大数
#DIM TAGNUMBER
#DIM CHR
#DIMS TASTE
#DIMS TASTETAG , 100
#DIMS TASTETAG_ORI

VARSET TASTE

;50%で和洋中が付く。排他
IF RAND:2
	SELECTCASE RAND:3
		CASE 0
			TASTE = 和食/
		CASE 1
			TASTE = 洋食/
		CASE 2
			TASTE = 中華/
	ENDSELECT
ENDIF

;50%で料理のジャンルが付く
;これらを併せ持つ料理もあるけど大まかな分類ってことで排他に
IF RAND:2
	SELECTCASE RAND:11
		CASE 0
			TASTE += "肉料理/"
		CASE 1
			TASTE += "魚料理/"
		CASE 2
			TASTE += "麺類/"
		CASE 3
			TASTE += "鍋物/"
		CASE 4
			TASTE += "汁物/"
		CASE 5
			TASTE += "ケーキ/"
		CASE 6
			TASTE += "パイ/"
		CASE 7
			TASTE += "おつまみ/"
		CASE 8
			TASTE += "揚げ物/"
		CASE 9
			TASTE += "煮物/"
		CASE 10
			TASTE += "謎料理/"
	ENDSELECT
ENDIF

;雑多なタグから3～7個選んで付与。DISHDATA眺めながらピックアップしたけど数え落としや重複あったらごめんね
;キャラごとの固有タグっぽいのは勘案しない
;矛盾するタグを消去することも考えたが、「なんだそりゃ？」みたいな注文も生成された方が面白いんじゃないか
{
TASTETAG_ORI = 
甘い/
しょっぱい/
辛い/
すっぱい/
あっさり/
ガッツリ/
ヘルシー/
ジャンキー/
濃厚/
淡泊/

冷たい/
温かい/
中立温度/

豪華/
上品/
豪快/
家庭的/
機能的/
薬効/

米/
豆/
野菜/
葉物/
パン/
チーズ/
卵/
うまい魚/
果物/
虫肉/
鳥肉/
獣肉/
カエル/
わさび/
ミルク/
スパイス/

甘味材/

キャベツ/
イチゴ/
カブ/
キュウリ/
トマト/
タマネギ/
スイカ/
ナス/
イモ/
カボチャ/
ハクサイ/
ニンジン/
ネギ/

仙桃/
キイチゴ/
ヤマブドウ/

とろとろ/
ぷるぷる/
ふわふわ/
サクサク/
もちもち/

鮮やか/
芸術的/
グロテスク/
質素/
野趣/

春物/
夏物/
秋物/
冬物/

精力/
エンチャント/
ギンギー/
}
;ローター/はなしで

;うまい魚は2/3で魚に化ける
IF STRCOUNT(TASTETAG_ORI , "うまい魚/") && RAND:3
	TASTETAG_ORI = %REPLACE(TASTETAG_ORI , "うまい魚/" , "魚/")%
ENDIF

;連結表記を用いると改行が半角スペースに置き換わるので除去
;REPLACE TASTETAG_ORI , " " , ""
TASTETAG_ORI = %REPLACE(TASTETAG_ORI , " " , "")%

;******キャラ別の要素処理******
;嫌いLv10クラスの嫌い方でなければ強制削除はしないようにした(小兎姫の辛いLv8は除去していない)
;明確な理由はないので必要とあらばいじってほしい

;くたかとミスティアは鳥肉と卵を除去する
IF GROUPMATCH(CHR, [[ミスティア]] , [[久侘歌]])
	TASTETAG_ORI = %REPLACE(TASTETAG_ORI , "鳥肉/" , "")%
	TASTETAG_ORI = %REPLACE(TASTETAG_ORI , "卵/" , "")%
ENDIF

;リグル、ラルバは虫肉を除去する
IF GROUPMATCH(CHR, [[リグル]] , [[ラルバ]])
	TASTETAG_ORI = %REPLACE(TASTETAG_ORI , "虫肉/" , "")%
ENDIF

;諏訪子はカエルを除去する
IF GROUPMATCH(CHR, [[諏訪子]])
	TASTETAG_ORI = %REPLACE(TASTETAG_ORI , "カエル/" , "")%
ENDIF

;わかさぎ姫は魚orうまい魚を除去する
IF GROUPMATCH(CHR, [[わかさぎ姫]])
	TASTETAG_ORI = %REPLACE(TASTETAG_ORI , "魚/" , "")%
	TASTETAG_ORI = %REPLACE(TASTETAG_ORI , "うまい魚/" , "")%
ENDIF
;うさぎ勢やきつね勢やねこ勢やたぬきなどは獣肉を消すべきなんだろうか。獣肉ってすごいざっくりだよね
;迷ったがやらない
;******************************

;タグ一覧からタグを指定個抜き出す作業
VARSET TASTETAG
SPLIT TASTETAG_ORI, "/", TASTETAG

;何かのミスで味タグの最低抽選数以下のタグしか与えられていなければエラー(無限ループだと落ちるまで時間かかる)
SIF RESULT < MINTAG
	THROW 文字列が不正

MAXCNT = RAND(MINTAG , MAXTAG + 1)
DO
	TAGNUMBER = RAND:VARSIZE("TASTETAG")
	SIF TASTETAG:TAGNUMBER == ""
		CONTINUE
	TASTE = %TASTE%%TASTETAG:TAGNUMBER%/
	MAXCNT--
	;タグの重複を排除するため、選んだものは削除。重複を許容するなら以下の処理を消去する
	TASTETAG:TAGNUMBER = 
LOOP MAXCNT != 0

;希に季節の物。突然季節外れの物食べたくなることもあるよね！
IF RAND:10 == 0
	IF RAND:3
		TASTE += "縁起物/"
	ELSE
		TASTE += "季節外れ/"
	ENDIF
ENDIF

;@IRAI_一般17_ジャンル評価での処理が不正になるため、最後尾の"/"を除去
SIF SUBSTRINGU(TASTE , STRLENSU(TASTE) - 1 , 1) == "/"
	TASTE = %SUBSTRINGU(TASTE , 0 , STRLENSU(TASTE) - 1)%

RETURNF TASTE


;料理味=甘い/甘い/しょっぱい、要求味=甘い/甘い/冷たいの場合に2を返す式中関数
;料理味=甘い/しょっぱい/辛い、要求味=甘い/甘い/サクサクの場合は1
;TWの@STR_MULTI_COUNTだと前者は4、後者は2を返す(はず)
@IRAI_一般17_ジャンル評価(料理味 = "" , 要求味 = "")
#FUNCTION
#DIMS 料理味
#DIMS 要求味
#DIMS 料理味分割 , 20
#DIMS 要求味分割 , 20
#DIM SCORE
#DIM CNT
#DIM MAXCNT

VARSET SCORE
VARSET 料理味分割
VARSET 要求味分割

SPLIT 料理味 , "/" , 料理味分割
SPLIT 要求味 , "/" , 要求味分割
MAXCNT = RESULT

;DEBUGPRINTFORM 料理味=%料理味%  要求味=%要求味%  MAXCNT={MAXCNT}
FOR CNT , 0 , MAXCNT
	FINDELEMENT 料理味分割 , 要求味分割:CNT
	IF RESULT >= 0
		;DEBUGPRINTFORM 料理味分割=<%料理味分割:RESULT%>  味要求分割=<%要求味分割:CNT%>  CNT={CNT}
		料理味分割:RESULT = 
		SCORE++
	ENDIF
NEXT
;DEBUGPRINTFORML 　　SCORE={SCORE}

RETURNF SCORE
