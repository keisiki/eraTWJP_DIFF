;----------------------------------------------------------
;@COLOR(ARGS)
;----------------------------------------------------------
@COLOR, ARGS
#FUNCTION
SELECTCASE TOUPPER(ARGS)
	CASE "RED", "赤"
		RETURNF 0xFF0000
	CASE "DARKRED"
		RETURNF 0x990000
	CASE "BLUE"
		RETURNF 0x0000FF
	CASE "P-RED", "PASTEL-RED", "パ赤"
		RETURNF 0xC07070
	CASE "P_BLUE", "PASTEL-BLUE", "パ青"
		RETURNF 0x7070C0
	CASE "P_GREEN", "PASTEL-GREEN", "パ緑"
		RETURNF 0x70C070
	CASE "MEDSPRINGGREEN"
		RETURNF 0x00FA9A
	CASE "GREEN","緑"
		RETURNF 0x00FF00
	CASE "P_PURPLE", "PASTEL-PURPLE", "パ紫"
		RETURNF 0xC070C0
	CASE "P-YELLOW", "PASTEL-YELLOW", "パ黄"
		RETURNF 0x505020
	CASE "P-BGREEN", "P_BLUEGREEN", "PASTEL-BLUEGREEN", "パ青緑"
		RETURNF 0x205050
	CASE "WHITE", "白"
		RETURNF 0xC0C0C0
	CASE "BLACK", "黒"
		RETURNF 0x000000
	CASE "AQUA", "水色"
		RETURNF 0x66FFFF
	CASE "GRAY", "灰色"
		RETURNF 0x404040
	CASE "LIGHT-GRAY", "明灰色"
		RETURNF 0x777777
	CASE "PINK", "桃"
		RETURNF 0xFFCCFF
	CASE "DARK-PINK", "黒桃"
		RETURNF 0x990099
	CASE "YELLOW", "黄"
		RETURNF 0xFFFF00
	CASE "ORANGE","橙"
		RETURNF 0xFFA500
	CASE "CREAM"
		RETURNF 0xFFFFCC
ENDSELECT

@COLORMESSAGE(ARGS,色,表示形式,フォントスタイル)
;直前まで使用していた色とフォントを保存し、使用後はそちらに復帰するように
;表示形式　0=通常　1=L　2=W
;フォントスタイル　0=通常　1=太字　2=斜体　4=打ち消し線　8=下線
;(ビットで管理されているため例えば3なら太字＋斜体)
#DIM 現在指定の色
#DIM 現在指定のフォントスタイル
#DIM 色
#DIM フォントスタイル
#DIM 表示形式

現在指定の色 = GETCOLOR()
現在指定のフォントスタイル = GETSTYLE()

SIF フォントスタイル
	FONTSTYLE フォントスタイル
SETCOLOR 色
SELECTCASE 表示形式
	CASE 0
	PRINTFORM %ARGS%
	CASE 1
	PRINTFORML %ARGS%
	CASE 2
	PRINTFORMW %ARGS%
ENDSELECT
SETCOLOR 現在指定の色
FONTSTYLE 現在指定のフォントスタイル

;条件を満たしていた場合に黄色をつける
@COND_COLORMESSAGE(COND,MESSAGE)
#DIM COND
#DIMS MESSAGE
SIF COND
	SETCOLOR C_YELLOW
PRINTFORML %MESSAGE%
RESETCOLOR

;-------------------------------------------------------------------------------
;    BARの色違え版
;-------------------------------------------------------------------------------
;    例  PRINTFORM %PRINT_COLORBAR(40,100,8,%UNICODE(0x2584)%,%UNICODE(0x2584)%,,0x404040)% 
;        [===     ]
;    引数はBARとほぼ一緒 + ARGSで描写文字の変更が可能(指定しない場合はBARと同じ仕様)
;    ARG:3はバーの色(0xFFFFFF形式で指定),ARG:4はバーの背景色(0xFFFFFF形式で指定)
;===============================================================================
@PRINT_COLORBAR(ARG, ARG:1, ARG:2, ARGS = "*", ARGS:1 = ".", ARG:3, ARG:4)
#LOCALSIZE 5
SIF ARG:1 <= 0
	ARG:1 = 1
LOCAL:1 = ARG * ARG:2 / ARG:1
LOCAL:2 = GETCOLOR()
FOR LOCAL, 1, ARG:2 + 1
	IF LOCAL:1 >= LOCAL
		IF !LOCAL:3
			SETCOLOR ARG:3
			LOCAL:3 = 1
		ENDIF
		PRINTFORM %ARGS%
	ELSE
		IF !LOCAL:4
			SETCOLOR ARG:4
			LOCAL:4 = 1
		ENDIF
		PRINTFORM %ARGS:1%
	ENDIF
NEXT
SETCOLOR LOCAL:2
VARSET LOCAL

;-------------------------------------------------
;カスタムバー用色セット関数@BARCOLORSET
;PRINT_COLORBARのARG:3に利用し、ARG;4にRESULTを使う
;-------------------------------------------------
@BARCOLORSET, ARGS
#FUNCTION
 ;LOCALに色を代入
SELECTCASE ARGS
	CASE "赤"
		RESULT:1 = 0x502020
		RETURNF 0xC07070
	CASE "薄赤"
		RESULT:1 = 0x803040
		RETURNF 0xF07090
	CASE "青"
		RESULT:1 = 0x202050
		RETURNF 0x7070C0
	CASE "緑"
		RESULT:1 = 0x205020
		RETURNF 0x70C070
	CASE "紫"
		RESULT:1 = 0x502050
		RETURNF 0xC070C0
	CASE "黄色"
		RESULT:1 = 0x505020
		RETURNF 0xC0C070
	CASE "青緑"
		RESULT:1 = 0x205050
		RETURNF 0x70C0C0
	CASE "白"
		RESULT:1 = 0x202020
		RETURNF 0xC0C0C0
	CASE "オレンジ"
		RESULT:1 = 0x504010
		RETURNF 0xFF8000
	CASE "水色"
		RESULT:1 = 0x203030
		RETURNF 0x5090FF
	CASE "EXTRA"
		RESULT:1 = 0x505020
		RETURNF 0xFFFFDD
	CASE "EXTRA2"
		RESULT:1 = 0x505020
		RETURNF 0xFFFFDD
	 ;白
	 CASEELSE
		RESULT:1 = 0x202020
		RETURNF 0xCCFFCC
ENDSELECT

;-------------------------------------------------
;ハートマーク関数@HEART
;	引数0：ハートの数（省略すると1つ）
;	引数1：使用するフォント名（省略するとVerdana）
;中抜きのハートマークを表示します
;-------------------------------------------------
@HEART(ARG = 1, ARGS)
LOCALS = %GETFONT()%
SETFONT "Times New Roman"
PRINTFORM %UNICODE(0x2665)*ARG%
;PRINTFORM %UNICODE(0x2661)*ARG%
SETFONT LOCALS


@HEARTMARK(ARG, ARGS)
GETFONT
LOCAL = GETCOLOR()
SIF ARGS != "PLAIN"
	SETCOLOR C_H_PINK
SETFONT "Times New Roman"
;PRINTFORM %UNICODE(0x2665) * ARG%
PRINTFORM %UNICODE(0x2764) * ARG%

SETFONT RESULTS
SETCOLOR LOCAL

;ハート文字を返す
;フォントは考慮していない
@GET_HEART()
#FUNCTIONS
RETURNF UNICODE(0x2665)


;ハート文字で挟む
@CLIP_HEART(文字列)
#FUNCTIONS
#DIMS 文字列
文字列 = %GET_HEART() + 文字列 + GET_HEART()%
RETURNF 文字列


;穣子口上からパクリ
;### ハートのみ別の色でPRINTするための関数 ##################
;文字列中に含まれる"HPH"をホットピンクカラーのハートとしてPRINTし、それ以外の文字列は通常の色で普通にPRINTする
;ARGS "W"=PRINTSWで表示。"L"=PRINTSLで表示。"W"でも"L"でもなければPRINTSで表示
@HPH_PRINT,対象文字列,ARGS
#DIMS 対象文字列
#DIM 出力文字数
#DIM HPHインデクス値

DO
	HPHインデクス値 = STRFIND(対象文字列, "HPH")
	
	;対象文字列がHPHで始まらないが後ろにHPHがある場合
	IF HPHインデクス値 >= 1
		;HPHの直前まで文字表示
		LOCALS = %SUBSTRING(対象文字列, 0, HPHインデクス値)%
		PRINTS @"%LOCALS%"
		出力文字数 = STRLENS(LOCALS)
	;対象文字列がHPHで始まる場合
	ELSEIF HPHインデクス値 == 0
		LOCALS:1 = %GETFONT()%
		SETFONT "Times New Roman"
		LOCAL = GETCOLOR()
		SETCOLOR C_H_PINK
		PRINTFORM %UNICODE(0x2764)%
		SETCOLOR LOCAL
		SETFONT LOCALS:1
		出力文字数 = 3
	;HPHがもうない場合
	ELSE
		;ここでARGSによる分岐
		SELECTCASE ARGS
		CASE "W"
			PRINTSW @"%対象文字列%"
		CASE "L"
			PRINTSL @"%対象文字列%"
		CASEELSE
			PRINTS @"%対象文字列%"
		ENDSELECT
		BREAK
	ENDIF

	;表示済みの文字分を削除して対象文字列を更新する
	対象文字列 = %SUBSTRING(対象文字列, 出力文字数, -1)%
	
LOOP 1
