;オブジェクト本体
;ここでARGで渡されるのはIRAI_SLOTの中身（依頼ID + 依頼者登録番号 * 1000）です
;関数名の@固有依頼XのXはキャラ番号（霊夢の依頼）ね
;こいつは@EXIST関数不要でよし（ということにする）
;上流、キャラデータ側で依頼IDの範囲を記述するのが存否の確認を兼ねる
;関数名etcをミスったらエラー吐いてくれるしわかるだろ
@固有依頼1(ARG, O_DATA, V_NAME)
#FUNCTION
#LOCALSIZE 1
#LOCALSSIZE 1
#DIMS O_DATA
#DIMS V_NAME
SELECTCASE ARG % 1000
;ID101：肩もみ
CASE 101
	SELECTCASE O_DATA
	CASE "依頼名"
		CALLF MAKE_STR(V_NAME, "肩もみ")
	CASE "依頼内容表示"
		CALLF MAKE_STR(V_NAME, "霊夢の肩をもむ")
	CASE "依頼報酬表示"
		CALLF MAKE_STR(V_NAME, "青汁")
	CASE "依頼実行コマンド名"
		CALLF MAKE_STR(V_NAME, "肩をもむ")
		
	CASE "依頼内容"
		CALLF MAKE_INT(V_NAME, MAKE_IRAI_DATA(0, "作業"))
	CASE "依頼サブ"
	CASE "依頼期限"
	;発生時ではなく受託時に確定します
	CASE "依頼発生率"
	;これは他の固有依頼との相対確率なんで10％ではありません
		CALLF MAKE_INT(V_NAME, 10)
	CASE "依頼発生条件"
		CALLF MAKE_INT(V_NAME, 1)
	CASE "依頼受託可能条件"
	;受託可能は@COM_ABLE366も確認のこと
	;ここを参照するのは依頼人をTARGETにしてる時なので素通しでよし
		CALLF MAKE_INT(V_NAME, 1)
	CASE "依頼実行可能条件"
	;実行可能は@COM_ABLE367も確認のこと
	;素通しでよし
		CALLF MAKE_INT(V_NAME, 1)
	;成功/失敗処理はCARRYOUTで直接書く
	;SOURCEやITEM入手など、内容が複雑なので
	CASE "依頼消滅条件"
	;30％で消失
		SIF RAND:100 < 30
			CALLF MAKE_INT(V_NAME, 1)
	ENDSELECT

;ID102：魔理沙の忘れ物
CASE 102
	SELECTCASE O_DATA
	CASE "依頼名"
		CALLF MAKE_STR(V_NAME, "魔理沙の忘れ物")
	CASE "依頼内容表示"
		CALLF MAKE_STR(V_NAME, "魔理沙に忘れ物を届ける")
	CASE "依頼報酬表示"
		CALLF MAKE_STR(V_NAME, @"\\500")
	CASE "依頼報告不要"
		CALLF MAKE_STR(V_NAME, "報告不要（報酬受理には報告必須）")
	CASE "依頼実行コマンド名"
		CALLF MAKE_STR(V_NAME, "忘れ物を届ける")
		
	CASE "依頼内容"
		CALLF MAKE_INT(V_NAME, MAKE_IRAI_DATA(11, "伝令（人物）"))
	CASE "依頼サブ"
	CASE "依頼期限"
		CALLF MAKE_INT(V_NAME, 7)
	;発生時ではなく受託時に確定します
	CASE "依頼発生率"
	;これは他の固有依頼との相対確率なんで10％ではありません
		CALLF MAKE_INT(V_NAME, 10)
	CASE "依頼発生条件"
		SIF GET_MAPID(CFLAG:11:現在位置) != 0 && CAN_MEET(11)
			CALLF MAKE_INT(V_NAME, 1)
	CASE "依頼受託可能条件"
	;受託可能は@COM_ABLE366も確認のこと
	;ここを参照するのは依頼人をTARGETにしてる時なので素通しでよし
		CALLF MAKE_INT(V_NAME, 1)
	CASE "依頼実行可能条件"
	;実行可能は@COM_ABLE367/@CAN_IRAI_SLOT_DOも確認のこと
	;素通しでよし
		CALLF MAKE_INT(V_NAME, 1)
	;成功/失敗処理はCARRYOUTで直接書く
	;SOURCEやITEM入手など、内容が複雑なので
	CASE "依頼消滅条件"
	;30％で消失
		SIF RAND:100 < 30
			CALLF MAKE_INT(V_NAME, 1)
	ENDSELECT

;ID103：宴会用の酒
CASE 103
	SELECTCASE O_DATA
	CASE "依頼名"
		CALLF MAKE_STR(V_NAME, "宴会用の酒")
	CASE "依頼内容表示"
		CALLF MAKE_STR(V_NAME, "酒の納入(10本)")
	CASE "依頼報酬表示"
		CALLF MAKE_STR(V_NAME, "宴会規模アップ")
	CASE "依頼実行コマンド名"
		CALLF MAKE_STR(V_NAME, "お酒を渡す")
		
	;対象のITEM_IDが選択可能なのでとりあえず作業分類に
	CASE "依頼内容"
		CALLF MAKE_INT(V_NAME, MAKE_IRAI_DATA(0, "作業"))
	CASE "依頼サブ"
	CASE "依頼期限"
	;発生時ではなく受託時に確定します
	CASE "依頼発生率"
	;条件を満たすのが稀だと思うので高めにしましょう
		CALLF MAKE_INT(V_NAME, 100)
	CASE "依頼発生条件"
		SIF FLAG:宴会開催フラグ == 1
			CALLF MAKE_INT(V_NAME, 1)
	CASE "依頼受託可能条件"
	;受託可能は@COM_ABLE366も確認のこと
	;ここを参照するのは依頼人をTARGETにしてる時なので素通しでよし
		CALLF MAKE_INT(V_NAME, 1)
	CASE "依頼実行可能条件"
	;実行可能は@COM_ABLE367も確認のこと
		SIF MAX(ITEM:51, ITEM:52, ITEM:53) >= 10
			CALLF MAKE_INT(V_NAME, 1)
	;成功/失敗処理はCARRYOUTで直接書く
	;SOURCEやITEM入手など、内容が複雑なので
	CASE "依頼消滅条件"
		SIF FLAG:宴会開催フラグ == 1 && !DAY % 7
			CALLF MAKE_INT(V_NAME, 1)
	ENDSELECT
ENDSELECT



;固有依頼の実処理用
;この関数は実行/成功/失敗時の
;報酬とペナルティと地の文のみを扱います
;各キャラのメッセージは別所にて
@IRAI_固有1(CHARA, IRAI_ID, SCENE)
#DIM  CHARA
#DIM  IRAI_ID
#DIMS SCENE
#DIM  CLIENT_ID
CLIENT_ID = IRAI_ID_TO_CLIENT(IRAI_ID)
SELECTCASE STR_DATA_IRAI(IRAI_ID, "依頼名", CLIENT_ID)
;個々の依頼名で分岐
CASE "肩もみ"
	SELECTCASE SCENE
	CASE "依頼条件表示"
	;何か専用の表示情報を設けたい時用
	;受託済みの依頼表示で使用されます
	;
	;PRINT系だけでSOURCEとかは入れちゃダメ、WAITも無しで
	;ここ以外の表示項目は
	;PRINTFORML 　　　　　：
	;となっているのでスペースを揃えたほうが見栄えが良いです
	
	CASE "依頼実行時"
	;依頼実行時にはRESULTが意味を持ちます
	;このCASEに限り、RESULTが意味を持ちます
	;依頼実行時のRESULTにはIRAI_CONST_RESULT()を使用してください
	;可能な引数は"キャンセル", "実行して成功", "実行して失敗", "実行して未解決"です
	;独自処理を仕込みたい時は"実行して未解決"で先延ばしするなりしてください
	;
	;・実行時/成功報告/失敗報告で地の文をつけるときはいずれも最後にWAITつけたほうがいい
	;・ただし、@CHANGE_CFLAGを使うと関数側でPRINTFORMWしてWAITが入る
		SOURCE:歓楽 = 1000
		SOURCE:情愛 = 300
		SOURCE:露出 = 20
		DOWNBASE:気力 += 50
		DOWNBASE:MASTER:気力 += 50
		PRINTFORMW %CALLNAME:MASTER%は%CALLNAME:TARGET%の肩を揉んだ
		;これは追加の10分
		TIME += 10
		;四割の確率でもっとやって！分岐
		IF RAND:100 < 60
			RETURN IRAI_CONST_RESULT("実行して未解決")
		ELSE
			RETURN IRAI_CONST_RESULT("実行して成功")
		ENDIF
	CASE "依頼成功時"
	;成功報告時の報酬など
		ITEM:青汁 ++
		SOURCE:歓楽 += 1000
		CALL CHANGE_CFLAG(2, 1, 20)
		CALL CHANGE_CFLAG(4, 1, 5)
		PRINTFORMW %CALLNAME:MASTER%は依頼報酬の青汁を受け取った
	CASE "依頼失敗時"
	;失敗報告時の処理
		CALL CHANGE_CFLAG(2, 1, -5)
		CALL CHANGE_CFLAG(4, 1, -3)
	ENDSELECT

CASE "魔理沙の忘れ物"
	SELECTCASE SCENE
	CASE "依頼条件表示"
	CASE "依頼実行時"
		SOURCE:歓楽 = 500
		PRINTFORMW %CALLNAME:MASTER%は%CALLNAME:11%に忘れ物を届けた
		;システムメッセージつき好感度変化
		;最後の引数だけ好感度が変化
		CALL CHANGE_CFLAG(2, 11, 20)
		CALL CHANGE_CFLAG(4, 11, 10)
		RETURN IRAI_CONST_RESULT("実行して成功")
	CASE "依頼成功時"
		MONEY += 500
		SOURCE:TARGET:歓楽 += 1000
		;システムメッセージつき好感度変化
		;最後の引数だけ好感度が変化
		CALL CHANGE_CFLAG(2, TARGET, 20)
		;システムメッセージつき信頼度変化
		;最後の引数だけ信頼度が変化
		CALL CHANGE_CFLAG(4, TARGET, 10)
		PRINTFORMW %CALLNAME:MASTER%は依頼報酬の\\500を受け取った
	CASE "依頼失敗時"
		CALL CHANGE_CFLAG(2, TARGET, -10)
		CALL CHANGE_CFLAG(4, TARGET, -10)
	ENDSELECT

CASE "宴会用の酒"
	SELECTCASE SCENE
	CASE "依頼条件表示"
	CASE "依頼実行時"
		PRINTL どれを渡そうか？
		CALL 酒一覧表示(10)
		IF INRANGE(RESULT, 51, 53)
			PRINTFORMW %CALLNAME:MASTER%は%CALLNAME:TARGET%にお酒を渡した
			ITEM:RESULT -= 10
			FLAG:宴会差し入れ = RESULT
			RETURN IRAI_CONST_RESULT("実行して成功")
		ELSE
			RETURN IRAI_CONST_RESULT("キャンセル")
		ENDIF
	CASE "依頼成功時"
		;システムメッセージつき好感度変化
		;最後の引数だけ好感度が変化
		CALL CHANGE_CFLAG(2, TARGET, 50)
		;システムメッセージつき信頼度変化
		;最後の引数だけ信頼度が変化
		CALL CHANGE_CFLAG(4, TARGET, 20)
	CASE "依頼失敗時"
		;システムメッセージつき好感度変化
		;最後の引数だけ好感度が変化
		CALL CHANGE_CFLAG(2, TARGET, -30)
		;システムメッセージつき信頼度変化
		;最後の引数だけ信頼度が変化
		CALL CHANGE_CFLAG(4, TARGET, -10)
	ENDSELECT

ENDSELECT



