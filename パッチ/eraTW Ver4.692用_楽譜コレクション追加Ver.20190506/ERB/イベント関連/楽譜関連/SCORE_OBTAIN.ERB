;-----------------------------------------------------------
;楽譜をランダムに1つ取得
;
;RETURNF 取得した楽譜番号、取得できなかった場合は-1
;-----------------------------------------------------------
@楽譜入手_ランダム
#FUNCTION

RETURNF EXEC_SCORES(楽譜処理モード：楽譜をランダムに１つ取得, 楽譜入手方法：ランダム)

;-----------------------------------------------------------
;キャラ番号と同じ入手条件の楽譜をランダムに1つ取得
;TARGET キャラ番号
;
;RETURNF 取得した楽譜番号、取得できなかった場合は-1
;-----------------------------------------------------------
@楽譜入手_演奏大成功(TARGET)
#FUNCTION

RETURNF EXEC_SCORES(楽譜処理モード：楽譜をランダムに１つ取得, TARGET)

;-----------------------------------------------------------
;キャラ番号に関連した入手条件が「楽譜入手方法：シリーズ関連キャラ陥落」の楽譜を一つ取得
;TARGET キャラ番号
;
;RETURNF 取得した楽譜番号、取得できなかった場合は-1
;-----------------------------------------------------------
@楽譜入手_陥落(TARGET)
#FUNCTION

COUNT = EXEC_SCORES(楽譜処理モード：キャラ関連シリーズを全取得, TARGET)
FOR LOCAL, 0, COUNT
	RESULT = EXEC_SCORES(楽譜処理モード：楽譜をランダムに１つ取得, 楽譜入手方法：シリーズ関連キャラ陥落, RESULT:LOCAL)
	SIF RESULT != -1
		RETURNF RESULT
NEXT

RETURNF -1

;-----------------------------------------------------------
;キャラ番号に関連した入手条件が「楽譜入手方法：シリーズ関連キャラ弾幕勝負」の楽譜を一つ取得
;TARGET キャラ番号
;
;RETURNF 取得した楽譜番号、取得できなかった場合は-1
;-----------------------------------------------------------
@楽譜入手_弾幕勝負(TARGET)
#FUNCTION

COUNT = EXEC_SCORES(楽譜処理モード：キャラ関連シリーズを全取得, TARGET)
FOR LOCAL, 0, COUNT
	RESULT = EXEC_SCORES(楽譜処理モード：楽譜をランダムに１つ取得, 楽譜入手方法：シリーズ関連キャラ弾幕勝負, RESULT:LOCAL)
	SIF RESULT != -1
		RETURNF RESULT
NEXT

RETURNF -1

;-----------------------------------------------------------
;指定した入手条件の楽譜を一つ取得
;EXEC_MODE 楽譜処理モード
;
;RETURNF 取得した楽譜番号、取得できなかった場合は-1
;-----------------------------------------------------------
@楽譜入手_特殊条件(EXEC_MODE)
#FUNCTION
#DIM EXEC_MODE
RETURNF EXEC_SCORES(楽譜処理モード：楽譜をランダムに１つ取得, EXEC_MODE)

;-----------------------------------------------------------
;楽譜を入手
;SCORE_NO 楽譜番号
;SKIP_CHECK チェックする場合は1
;
;RETURNF 入手済みなら0, 未入手なら1
;-----------------------------------------------------------
@OBTAIN_SCORE(SCORE_NO, SKIP_CHECK=1)
#FUNCTION
#DIM SCORE_NO	; 楽譜番号
#DIM SKIP_CHECK	; チェックする場合は1

IF HAVE_SCORE(SCORE_NO)
	;楽譜入手済みの場合、処理をスキップ
	RETURNF 0
ELSE
	RESULT = SET_SCORE(SCORE_NO, 1)
	PRINTFORML %GET_SCORE_OBTAIN_MESSAGE(SCORE_NO)%
	RETURNF 1
ENDIF

;-----------------------------------------------------------
;楽譜取得に連動して取得される楽譜のチェック
;SCORE_NO 楽譜番号
;-----------------------------------------------------------
@OBTAIN_SCORE_CHECK(SCORE_NO)
#FUNCTION
#DIM DYNAMIC SCORE_NO	; 楽譜番号

#DIM DYNAMIC SERIES_NO	; シリーズ番号

SERIES_NO = GET_SERIES_NO(SCORE_NO)

;【楽譜入手方法：シリーズ初取得】の処理
LOCAL = EXEC_SCORES(楽譜処理モード：所持数カウント, -1, SERIES_NO)
SIF 0 < LOCAL
	; 1つ以上楽譜がある場合、【シリーズ初取得】の楽譜を全て取得
	RESULT = EXEC_SCORES(楽譜処理モード：全楽譜を取得, 楽譜入手方法：シリーズ初取得, SERIES_NO)

;【楽譜入手方法：シリーズランダムコンプ】の処理
LOCAL:1 = EXEC_SCORES(楽譜処理モード：総数カウント, 楽譜入手方法：ランダム, SERIES_NO)
LOCAL:2 = EXEC_SCORES(楽譜処理モード：所持数カウント, 楽譜入手方法：ランダム, SERIES_NO)
SIF LOCAL:1 <= LOCAL:2
	RESULT = EXEC_SCORES(楽譜処理モード：全楽譜を取得, 楽譜入手方法：シリーズランダムコンプ, SERIES_NO)

;【楽譜入手方法：シリーズ完全コンプ】の処理
LOCAL:1 = EXEC_SCORES(楽譜処理モード：総数カウント, -1, SERIES_NO)
LOCAL:2 = EXEC_SCORES(楽譜処理モード：所持数カウント, -1, SERIES_NO)
LOCAL:3 = EXEC_SCORES(楽譜処理モード：総数カウント, 楽譜入手方法：シリーズ完全コンプ, SERIES_NO)
SIF (LOCAL:1 - LOCAL:3) <= LOCAL:2
	; 楽譜所持数が (総数 - 完全コンプの楽譜数) を上回っていた場合、【シリーズ完全コンプ】の楽譜を全て取得
	RESULT = EXEC_SCORES(楽譜処理モード：全楽譜を取得, 楽譜入手方法：シリーズ完全コンプ, SERIES_NO)

RETURNF 0